import { useContext, useEffect, useState } from 'react'
import Head from 'next/head'
import { Card } from 'primereact/card'
import { Button } from 'primereact/button'
import { InputNumber } from 'primereact/inputnumber'
import Header from '../components/Header'
import { withSSRAuth } from '../utils/withSSRAuth'
import { AuthContext } from '../context/AuthContext'
import { getPairRates, updatePrice } from '../services/admin'

export default function Login() {
  const [rates, setRates] = useState([])
  const [value, setValue] = useState(0)
  const [loading, setLoading] = useState(false)
  const { user } = useContext(AuthContext)

  useEffect(() => {
    if (!user?.isAdmin) {
      window.location.href = '/app'
    }

    const fetchData = async () => {
      const response = await getPairRates()
      setRates(response)
      setValue(response[0].price)
    }

    fetchData().catch((error) => {
      console.log(error)
    })
  }, [])

  const handleUpdatePrice = async (id) => {
    try {
      setLoading(true)
      await updatePrice(id, value)
      setLoading(false)
    } catch (error) {
      setLoading(false)
    }
  }

  return (
    <>
      <Head>
        <title>Eurocambiovla - Tipos de cambio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container">
        <Header />
        <div
          style={{
            display: 'flex',
            justifyContent: 'center',
            gap: '20px',
            flexWrap: 'wrap'
          }}
        >
          {rates.map((rate) => (
            <Card key={rate.id}>
              <h4>Cambio: {rate.name}</h4>
              <p>
                Precio actual: {rate.price} {rate.departureCurrency.symbol}
              </p>
              <InputNumber
                inputId="locale-vef"
                value={value}
                onValueChange={(e) => setValue(e.value)}
                mode="currency"
                currency="VEF"
                locale="es-VE"
              />
              <Button
                label="Actualizar precio"
                loading={loading}
                onClick={() => {
                  handleUpdatePrice(rate.id)
                }}
              />
            </Card>
          ))}
        </div>
      </div>
    </>
  )
}

export const getServerSideProps = withSSRAuth(async () => ({
  props: {}
}))
